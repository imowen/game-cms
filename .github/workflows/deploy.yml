name: 🎮 Deploy Game CMS to VPS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧹 Run linting
        run: npm run lint
        continue-on-error: true

  deploy:
    name: 🚀 Deploy to VPS
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT || 22 }}
          script: |
            echo "🎮 Starting Game CMS deployment..."

            # 导航到项目目录
            cd /data/www/ggame.ee || {
              echo "❌ Project directory not found"
              exit 1
            }

            # 备份数据库文件
            echo "💾 Backing up database..."
            if [ -f "games.db" ]; then
              cp games.db games.db.backup.$(date +%Y%m%d_%H%M%S)
              echo "✅ Database backed up successfully"
            else
              echo "⚠️  No existing database found, will create new one"
            fi

            # 强制拉取最新代码
            echo "📥 Pulling latest code..."
            git reset --hard HEAD
            git pull origin main || {
              echo "⚠️  Git pull failed, checking current status..."
              git log --oneline -3
              echo "Continuing with existing code..."
            }

            # 恢复数据库文件
            echo "🔄 Restoring database..."
            LATEST_BACKUP=$(ls -t games.db.backup.* 2>/dev/null | head -1)
            if [ -n "$LATEST_BACKUP" ] && [ -f "$LATEST_BACKUP" ]; then
              cp "$LATEST_BACKUP" games.db
              echo "✅ Database restored from backup: $LATEST_BACKUP"
            else
              echo "⚠️  No backup found, database will be recreated"
            fi

            # 清理并重新安装依赖
            echo "📦 Reinstalling dependencies..."
            rm -rf node_modules
            npm ci

            # 运行数据库迁移
            echo "🗄️ Running database migration..."
            npm run migrate

            # 清理所有缓存
            echo "🧹 Clearing all caches..."
            rm -rf .next
            rm -rf node_modules/.cache
            rm -rf .next/cache

            # 构建项目
            echo "🏗️ Building project..."
            NODE_ENV=production npm run build

            # 重启PM2进程（零停机部署）
            echo "🔄 Restarting PM2 process..."
            if pm2 list | grep -q "game-cms"; then
              echo "Reloading existing PM2 process..."
              pm2 reload game-cms
            else
              echo "Starting new PM2 process..."
              pm2 start npm --name "game-cms" -- start
            fi

            # 保存PM2配置
            pm2 save

            # 检查应用状态
            echo "🔍 Checking application status..."
            sleep 5
            if curl -f http://localhost:3001 > /dev/null 2>&1; then
              echo "✅ Deployment successful! Game CMS is running on port 3001."
            else
              echo "❌ Deployment failed! Application not responding."
              pm2 logs game-cms --lines 20
              exit 1
            fi

            # 清理旧的数据库备份文件（保留最近5个）
            echo "🧹 Cleaning up old database backups..."
            ls -t games.db.backup.* 2>/dev/null | tail -n +6 | xargs -r rm -f
            echo "✅ Backup cleanup completed"

      - name: 📧 Notify on success
        if: success()
        run: |
          echo "🎉 Game CMS deployment completed successfully!"

      - name: 📧 Notify on failure
        if: failure()
        run: |
          echo "❌ Game CMS deployment failed!"